<%- include('components/navbar') %> <%- include('components/sidebar')%>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin panel</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
         body {
        font-family: "Roboto", sans-serif;
        background-color: #f7f9fc;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column; /* Use column direction */
        align-items: center;
        min-height: 100vh; /* Ensure the body takes up the full height */
      }
      .header {
        background-color: #e1e8e6;
        height: 90px; /* Set the height of the div */
        margin-bottom: 30px;
        display: flex;
        justify-content: left;
        align-items: center;
        border-radius: 5px;
      }

      .header h2 {
        color: #121212;
        font-size: 2rem;
        margin-left: 20px;
      }
       /* Enhanced styling for table */
       .table-container {
        background-color: #fff;
        width: 70%;
        margin-top: 110px;
        margin-left: 22%;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      }

      h2 {
        font-size: 1.8rem;
        color: #333;
        margin-bottom: 20px;
      }

      table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #fff;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        overflow: hidden;
      }

      table th,
      table td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
      }

      table th {
        background-color: #007bff;
        color: #fff;
        text-transform: uppercase;
        letter-spacing: 0.03em;
      }

      table td {
        background-color: #f9f9f9;
      }

      table tr:nth-child(even) td {
        background-color: #f1f1f1;
      }

      /* Action buttons styling */
      .action-buttons button {
        padding: 8px 12px;
        margin-right: 5px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
      }
      .edit-btn {
        background-color: #4caf50; /* Green */
        color: white;
      }
      .delete-btn {
        background-color: #f44336; /* Red */
        color: white;
      }

      /* Button hover effect */
      .edit-btn:hover,
      .delete-btn:hover {
        opacity: 0.8;
      }

      .controls {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: 15px;
        margin-bottom: 15px;
      }

      .controls label {
        font-size: 16px;
      }

      .controls select,
      .controls input {
        padding: 8px;
        width: 200px; /* Set both select and input to 200px width */
        font-size: 14px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }

      #search-input {
        margin-left: 58%;
      }

      #search-input:focus {
        border-color: #007bff;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Subtle glow effect */
        outline: none;
      }

      .controls button {
        padding: 7px;
        font-size: 0.9rem;
        background-color: rgb(34, 24, 24);
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
      }

      .controls button:hover {
        background-color: #0056b3;
        transform: scale(1.05);
      }
      
      .controls {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: 15px;
        margin-bottom: 15px;
      }

      .controls label {
        font-size: 16px;
      }

      .controls select,
      .controls input {
        padding: 8px;
        width: 200px; /* Set both select and input to 200px width */
        font-size: 14px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }

      #search-input {
        margin-left: 58%;
      }

      #search-input:focus {
        border-color: #007bff;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Subtle glow effect */
        outline: none;
      }

      .controls button {
        padding: 7px;
        font-size: 0.9rem;
        background-color: rgb(34, 24, 24);
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
      }

      .controls button:hover {
        background-color: #0056b3;
        transform: scale(1.05);
      }
      
    </style>
</head>
<body>

  <div class="table-container">
    <div class="header">
      <h2>Manage Products </h2>
    </div>
    
    <div class="controls">
      <!-- Show List (rows to display) -->
      <label for="show-list">Show</label>
      <select id="show-list" onchange="updateTableRows()">
        <option value="10">10</option>
        <option value="20">20</option>
        <option value="30">30</option>
        <option value="All">All</option>
      </select>

      <!-- Search Field -->
      <input
        type="text"
        id="search-input"
        onkeyup="searchUsers()"
        placeholder="Search by Name or Email"
      />
      <button class="search-btn" onclick="searchUsers()">Search</button>
    </div>

    <table>
      <thead>
        <tr>
          <th>Serial No</th>
          <th>Product Name</th>
          <th>Category Name</th>
          <th>Subcategory Name</th>
          <th>Company Name</th>
          <th>Creation Date</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody id="userTableBody">
        <% products.forEach((product, index) => { %>
          <tr>
            <td><%= index + 1 %></td>
            <td><%= product.productname %></td>
            <td><%= product.category.name %></td>
            <td><%= product.subcategory.name %></td>
            <td><%= product.productcompany %></td>
            <td><%= product.createdAt.toLocaleDateString('en-US',{ hour: '2-digit',
              minute: '2-digit',
              second: '2-digit'}) %></td>
              <td class="action-buttons">
                <button class="edit-btn" onclick="window.location.href='/admin/edit-Manageproducts/<%= product._id %>'">
                  <i class="fas fa-edit"></i>
                </button>
                <button class="delete-btn" onclick="deleteProduct('<%= product._id %>')">
                  <i class="fas fa-trash"></i>
                </button>
              </td>
              
          </tr>
        <% }) %>
      </tbody>
    </table>

  </div>
    
  <script>
    async function deleteProduct(productId) {
      const confirmation = confirm('Are you sure you want to delete this product?');
  
      if (confirmation) {
        try {
          const response = await fetch(`/admin/Manage-products/${productId}`, {
            method: 'DELETE',
          });
  
          const data = await response.json();
  
          if (response.ok) {
            alert('Product deleted successfully');
            location.reload(); // Reload the page after successful deletion
          } else {
            alert('Error deleting product: ' + data.message);
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error deleting product');
        }
      }
    }
  </script>

<script>
  // Function to update table rows based on the selected value in the dropdown
  function updateTableRows() {
    const tableBody = document.getElementById("userTableBody");
    const rows = tableBody.getElementsByTagName("tr");
    const showLimit = document.getElementById("show-list").value;

    // Convert 'showLimit' to number, except when it's 'All'
    const limit = showLimit === "All" ? rows.length : parseInt(showLimit);

    // Loop through all rows
    for (let i = 0; i < rows.length; i++) {
      // Show rows within the limit, hide others
      if (i < limit) {
        rows[i].style.display = ""; // Show the row
      } else {
        rows[i].style.display = "none"; // Hide the row
      }
    }
  }

  // Initial call to display the correct number of rows when the page loads
  updateTableRows();
</script>

    
</body>
</html>